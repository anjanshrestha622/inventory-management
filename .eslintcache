[{"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\index.js":"1","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\App.js":"2","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\reportWebVitals.js":"3","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\VendorPage\\index.jsx":"4","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\SinglePage\\SingleItem.jsx":"5","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\ItemPage\\index.jsx":"6","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\DashboardPage\\index.jsx":"7","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\CustomerPage\\index.jsx":"8","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\LossAndDamage\\index.jsx":"9","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\LoginPage\\index.jsx":"10","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\PurchaseReturnPage\\index.jsx":"11","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\SalesPage\\index.jsx":"12","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\Stock\\index.jsx":"13","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\SalesReturnPage\\index.jsx":"14","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\PurchasePage\\index.jsx":"15","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\Rack\\index.jsx":"16","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\hoc\\PublicRoute\\index.jsx":"17","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\hoc\\PrivateRoute\\index.jsx":"18","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\VendorPage\\vendorForm.js":"19","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\VendorPage\\VendorTableList.js":"20","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\CustomerPage\\CustomerListTable.js":"21","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\CustomerPage\\CustomerForm.js":"22","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\component\\index.js":"23","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\component\\Footer\\index.jsx":"24","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\component\\Header\\index.jsx":"25","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\component\\SideBar\\index.jsx":"26","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\VendorPage\\SingleVendor.js":"27"},{"size":511,"mtime":1612165168477,"results":"28","hashOfConfig":"29"},{"size":2399,"mtime":1612512736735,"results":"30","hashOfConfig":"29"},{"size":375,"mtime":1611299711148,"results":"31","hashOfConfig":"29"},{"size":1317,"mtime":1612493795175,"results":"32","hashOfConfig":"29"},{"size":2885,"mtime":1612512760522,"results":"33","hashOfConfig":"29"},{"size":8380,"mtime":1612453685566,"results":"34","hashOfConfig":"29"},{"size":119,"mtime":1612278412350,"results":"35","hashOfConfig":"29"},{"size":1698,"mtime":1612178562294,"results":"36","hashOfConfig":"29"},{"size":110,"mtime":1612165168460,"results":"37","hashOfConfig":"29"},{"size":2946,"mtime":1612165168459,"results":"38","hashOfConfig":"29"},{"size":10198,"mtime":1612165168466,"results":"39","hashOfConfig":"29"},{"size":7414,"mtime":1612165168469,"results":"40","hashOfConfig":"29"},{"size":133,"mtime":1612165168472,"results":"41","hashOfConfig":"29"},{"size":7417,"mtime":1612165168470,"results":"42","hashOfConfig":"29"},{"size":10535,"mtime":1612512896199,"results":"43","hashOfConfig":"29"},{"size":102,"mtime":1612165168467,"results":"44","hashOfConfig":"29"},{"size":465,"mtime":1611487225950,"results":"45","hashOfConfig":"29"},{"size":1086,"mtime":1611487225948,"results":"46","hashOfConfig":"29"},{"size":2657,"mtime":1612512411575,"results":"47","hashOfConfig":"29"},{"size":1703,"mtime":1612494247188,"results":"48","hashOfConfig":"29"},{"size":1329,"mtime":1612333324370,"results":"49","hashOfConfig":"29"},{"size":3536,"mtime":1612279484501,"results":"50","hashOfConfig":"29"},{"size":107,"mtime":1612170425097,"results":"51","hashOfConfig":"29"},{"size":107,"mtime":1612165168442,"results":"52","hashOfConfig":"29"},{"size":920,"mtime":1612165168443,"results":"53","hashOfConfig":"29"},{"size":2582,"mtime":1612165168445,"results":"54","hashOfConfig":"29"},{"size":4891,"mtime":1612512550141,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"13z1r4s",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":9,"warningCount":0,"fixableErrorCount":9,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":7,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":11,"warningCount":0,"fixableErrorCount":11,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\index.js",[],[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\App.js",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\reportWebVitals.js",["121","122","123","124","125","126","127","128","129"],"const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\VendorPage\\index.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\SinglePage\\SingleItem.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\ItemPage\\index.jsx",["130"],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Tabs,\r\n  Table,\r\n  message,\r\n  Spin,\r\n  Button,\r\n  Typography,\r\n} from 'antd'\r\nimport './style.scss'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n// import SubmitButton from '../../component/SubmitButton';\r\n\r\nconst { Title } = Typography\r\nconst { TabPane } = Tabs\r\nconst columns = [\r\n  {\r\n    title: 'S.N',\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'item_name',\r\n    key: 'name',\r\n    sorter: {\r\n      compare: (a, b) => a.item_name - b.item_name,\r\n    },\r\n  },\r\n  {\r\n    title: 'Item Code',\r\n    dataIndex: 'item_code',\r\n    key: 'code',\r\n  },\r\n  {\r\n    title: 'Local Name',\r\n    dataIndex: 'local_name',\r\n    key: 'local_name',\r\n  },\r\n\r\n  {\r\n    title: 'Item Catergory',\r\n    dataIndex: 'item_code',\r\n    key: 'item_category',\r\n  },\r\n  {\r\n    title: 'Item Limit',\r\n    dataIndex: 'item_limit',\r\n    key: 'limit',\r\n  },\r\n  {\r\n    title: 'Item Price',\r\n    dataIndex: 'item_price',\r\n    key: 'price',\r\n    sorter: {\r\n      compare: (a, b) => a.item_price - b.item_price,\r\n    },\r\n  },\r\n  {\r\n    title: 'Action',\r\n    dataIndex: '',\r\n    key: 'x',\r\n    render: () => <Link to=\"/single-item\">Edit</Link>,\r\n  },\r\n]\r\n\r\nfunction ItemPage() {\r\n  const [itemData, setItemData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [formData, setFormData] = useState({\r\n    local_name: '',\r\n    item_name: '',\r\n    item_code: '',\r\n    item_category: '',\r\n    item_limit: '',\r\n    item_price: '',\r\n  })\r\n\r\n  function handleChange(e) {\r\n    const value = e.target.value\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: value,\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // const source = axios.CancelToken.source()\r\n\r\n    try {\r\n      setLoading(true)\r\n      axios.get('http://inventoryguras.herokuapp.com/item/').then((repos) => {\r\n        setItemData(repos.data)\r\n        setLoading(false)\r\n        // console.log(repos.data,'helo')\r\n      })\r\n    } catch (error) {\r\n      setLoading(false)\r\n      message.error(error.message)\r\n    }\r\n    // return () => {\r\n    //   source.cancel()\r\n    // }\r\n  }, [])\r\n\r\n  // const submit = (e) => {\r\n  //   let item_name = e.target.value;\r\n  //   let local_name = e.target.value;\r\n  //   let item_code = e.target.value;\r\n  //   let item_category = e.target.value;\r\n  //   let item_limit = e.target.value;\r\n  //   let item_price = e.target.value;\r\n\r\n  //   let itemData = {\r\n  //     local_name,\r\n  //     item_name,\r\n  //     item_code,\r\n  //     item_price,\r\n  //     item_category,\r\n  //     item_limit,\r\n  //   };\r\n  //   console.log(e, 'submited data');\r\n  //   handleSubmit(itemData);\r\n  // };\r\n\r\n  const handleSubmit = () => {\r\n    // console.log(formData, \"submitted\")\r\n    axios\r\n      .post(`http://inventoryguras.herokuapp.com/item/`, formData)\r\n      .catch((err) => alert(err))\r\n  }\r\n  return (\r\n    <div>\r\n      <Row style={{ padding: '0px 50px' }}>\r\n        <Title level={2} style={{ color: 'gray', paddingTop: '10px' }}>\r\n          Items Details\r\n        </Title>\r\n        <Tabs className=\"Item-tab\" type=\"card\" defaultActiveKey=\"1\">\r\n          <TabPane tab=\"Add Items\" key=\"1\">\r\n            <Form\r\n              onFinish={handleSubmit}\r\n              style={{ width: '100%' }}\r\n              className=\"login-form \"\r\n              layout=\"inline\"\r\n              initialValues={{ remember: true }}\r\n            >\r\n              <Col lg={{ span: 10 }}>\r\n                <Form.Item\r\n                  rules={[\r\n                    { required: true, message: 'Please input your Item Name!' },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    onChange={handleChange}\r\n                    value={formData.item_name}\r\n                    name=\"item_name\"\r\n                    className=\"from-input\"\r\n                    placeholder=\"Item Name\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col lg={{ span: 10 }}>\r\n                <Form.Item\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input your Local Name!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    className=\"from-input\"\r\n                    onChange={handleChange}\r\n                    value={formData.local_name}\r\n                    name=\"local_name\"\r\n                    placeholder=\"Local Name\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col lg={{ span: 10 }}>\r\n                <Form.Item\r\n                  rules={[\r\n                    { required: true, message: 'Please input your Item Code!' },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    className=\"from-input\"\r\n                    onChange={handleChange}\r\n                    value={formData.local_code}\r\n                    name=\"item_code\"\r\n                    placeholder=\"Item Code\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col lg={{ span: 10 }}>\r\n                <Form.Item\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input your Item Category!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    onChange={handleChange}\r\n                    className=\"from-input\"\r\n                    value={formData.item_category}\r\n                    name=\"item_category\"\r\n                    placeholder=\"Item category\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col lg={{ span: 10 }}>\r\n                <Form.Item\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input your Item Limit!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    className=\"from-input\"\r\n                    onChange={handleChange}\r\n                    value={formData.item_limit}\r\n                    placeholder=\"Item Limit\"\r\n                    name=\"item_limit\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col lg={{ span: 10 }}>\r\n                <Form.Item\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input your Item price!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    className=\"from-input\"\r\n                    onChange={handleChange}\r\n                    value={formData.item_price}\r\n                    placeholder=\"Item price\"\r\n                    name=\"item_price\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col lg={{ span: 6 }}>\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  size={'large'}\r\n                  style={{\r\n                    padding: '5px',\r\n                    margin: '0px 20px',\r\n                    background: 'green',\r\n                    color: 'whitesmoke',\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n            </Form>\r\n          </TabPane>\r\n          <TabPane tab=\"List Items\" key=\"2\">\r\n            {loading ? (\r\n              <Table\r\n                columns={columns}\r\n                dataSource={itemData.map((data) => {\r\n                  return {\r\n                    ...data,\r\n                    key: data.id,\r\n                  }\r\n                })}\r\n                expandable={{\r\n                  // eslint-disable-next-line react/display-name\r\n                  expandedRowRender: (key) => (\r\n                    <>\r\n                      <p style={{ margin: 0 }}>{key.item_name}</p>\r\n                      {/* <p style={{ margin: 0 }}>\r\n                      {key.id}\r\n                    </p> */}\r\n                    </>\r\n                  ),\r\n                }}\r\n              />\r\n            ) : (\r\n              <Spin />\r\n            )}\r\n          </TabPane>\r\n        </Tabs>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemPage\r\n","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\DashboardPage\\index.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\CustomerPage\\index.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\LossAndDamage\\index.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\LoginPage\\index.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\PurchaseReturnPage\\index.jsx",["131","132","133","134","135"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { Typography } from 'antd'\r\nimport axios, { post } from 'axios'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport { Input, Tabs, Row, Col, Form, Table, Select } from 'antd'\r\n\r\nconst { TabPane } = Tabs\r\nconst { Title } = Typography\r\n\r\nconst PurchaseVoucherColumns = [\r\n  {\r\n    title: 'S.N',\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n  },\r\n  {\r\n    title: 'Item Name',\r\n    dataIndex: 'item_name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Goodown/rack',\r\n    dataIndex: 'rack_number',\r\n    key: 'code',\r\n  },\r\n  {\r\n    title: 'Quantity',\r\n    dataIndex: 'quantity',\r\n    key: 'local_name',\r\n  },\r\n\r\n  {\r\n    title: 'Unit',\r\n    dataIndex: 'price',\r\n    key: 'iunit',\r\n    sorter: {\r\n      compare: (a, b) => a.item_price - b.item_price,\r\n    },\r\n  },\r\n  {\r\n    title: 'Rate',\r\n    dataIndex: 'price',\r\n    key: 'limit',\r\n  },\r\n  {\r\n    title: ' Total',\r\n    dataIndex: 'total_price',\r\n    key: 'total_price',\r\n  },\r\n]\r\n\r\nconst purchaseListTable = [\r\n  {\r\n    title: 'Date',\r\n    dataIndex: 'date',\r\n    key: 'date',\r\n  },\r\n  {\r\n    title: 'Vendor Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Voucher type(Purchase)',\r\n    dataIndex: '',\r\n    key: 'x',\r\n    render: () => <p>Purchase</p>,\r\n  },\r\n\r\n  {\r\n    title: 'Voucher no',\r\n    dataIndex: 'voucher_type',\r\n    key: 'voucher_type',\r\n  },\r\n  {\r\n    title: 'Bill no ',\r\n    dataIndex: 'bill_number',\r\n    key: 'bill_number',\r\n  },\r\n  {\r\n    title: 'Total',\r\n    dataIndex: 'total_price',\r\n    key: 'total_price',\r\n  },\r\n]\r\nconst handleSubmitBill = (e) => {\r\n  let files = e.target.files\r\n  console.warn(files, 'bil')\r\n  let reader = new FileReader()\r\n  reader.readAsDataURL(files[0])\r\n  reader.onload = (e) => {\r\n    // console.warn(e.target.result,'dataimg')\r\n    const bill_data = { bill_file: e.target.result }\r\n    const url = 'http://inventoryguras.herokuapp.com/item'\r\n    return post(url, bill_data).then((response) =>\r\n      console.log(response, 'final'),\r\n    )\r\n  }\r\n}\r\n\r\nfunction PurchasePage() {\r\n  const [purchaseVoucher, setPurchaseVoucher] = useState([])\r\n  const [purchaseList, setPurchaseList] = useState([])\r\n  const [calculationRow, setcalculationRow] = useState({\r\n    total: '1000',\r\n    Discount: '20',\r\n    Total_After_Discount: '10',\r\n    Vat_amount: '',\r\n    Grand_total: '',\r\n  })\r\n\r\n  const Purchase_bill = useRef()\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setLoading(true)\r\n      axios\r\n        .get('http://inventoryguras.herokuapp.com/purchase/')\r\n        .then((repos) => {\r\n          console.log(repos.data, 'hello')\r\n          setPurchaseVoucher(\r\n            repos.data.map((purchaseVoucherData) => {\r\n              return {\r\n                id: purchaseVoucherData.id,\r\n                price: purchaseVoucherData.price,\r\n                item_name: purchaseVoucherData.item.item_name,\r\n                rack_number: purchaseVoucherData.rack_number.rack_number,\r\n                quantity: purchaseVoucherData.quantity,\r\n                total_price: purchaseVoucherData.total_price,\r\n              }\r\n            }, calculationRow),\r\n          )\r\n          setPurchaseList(\r\n            repos.data.map((list) => {\r\n              return {\r\n                name: list.vendor_detail.name,\r\n                bill_number: list.bill_number,\r\n                date: list.date,\r\n              }\r\n            }),\r\n          )\r\n        })\r\n    } catch (error) {\r\n      setLoading(false)\r\n      message.error(error.message)\r\n    }\r\n  }, [])\r\n  const handlePrint = useReactToPrint({\r\n    content: () => Purchase_bill.current,\r\n  })\r\n  const total = () => {\r\n    return (\r\n      <div style={{ display: 'flex' }}>\r\n        <p>Total:1000</p>\r\n        <p>discount:200</p>\r\n        <p>vat:20</p>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Title level={2} style={{ color: 'gray', padding: '  5px 30px' }}>\r\n          Purchase Details\r\n        </Title>\r\n        <button\r\n          onClick={handlePrint}\r\n          style={{\r\n            background: 'green',\r\n            color: 'white',\r\n            height: '40px',\r\n            margin: '5px 15px',\r\n          }}\r\n        >\r\n          Generate Report\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{ padding: '0px 30px' }}\r\n        className=\"card-container\"\r\n        ref={Purchase_bill}\r\n      >\r\n        <Tabs type=\"card\">\r\n          <TabPane className=\"Purchase_bill\" tab=\"Purchase Voucher\" key=\"1\">\r\n            <Row>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    paddingLeft: '60px',\r\n                  }}\r\n                  label=\" Date\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter Date\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8} offset={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                  }}\r\n                  label=\"Voucher no\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter Voucher no\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                  }}\r\n                  label=\" Voucher Type\"\r\n                >\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Purchase and Purchase Return\"\r\n                    value={' Purchase Return'}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8} offset={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    paddingLeft: '35px',\r\n                  }}\r\n                  label=\"Bill no\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter Voucher no\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                  }}\r\n                  label=\"Vendor Name\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter Vendor name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8} offset={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    paddingLeft: '17px',\r\n                  }}\r\n                  label=\"PAN Num\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter PAN Num\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    paddingLeft: '40px',\r\n                  }}\r\n                  label=\"Contact\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter Contact\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8} offset={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                  }}\r\n                  label=\" Upload Bill \"\r\n                >\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"bill_file\"\r\n                    onChange={handleSubmitBill}\r\n                    size=\"large\"\r\n                    placeholder=\"Enter Bill\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    paddingLeft: '40px',\r\n                  }}\r\n                  label=\"Address\"\r\n                  placeholder=\"Select Adress\"\r\n                >\r\n                  <Select size=\"large\">\r\n                    <Select.Option value=\"1\">Kathmandu</Select.Option>\r\n                    <Select.Option value=\"2\">Bhaktpur</Select.Option>\r\n                    <Select.Option value=\"3\">Lalitpur</Select.Option>\r\n                    <Select.Option value=\"4\">Kritipur</Select.Option>\r\n                    <Select.Option value=\"4\">Biratnagar</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ width: '100%', background: 'white' }}>\r\n              {loading && (\r\n                <Table\r\n                  style={{ width: '100%' }}\r\n                  dataSource={purchaseVoucher}\r\n                  columns={PurchaseVoucherColumns}\r\n                  footer={total}\r\n                />\r\n              )}\r\n              <Col span={12} offset={10}>\r\n                <p>Total</p>\r\n              </Col>\r\n              <Col span={12} offset={10}>\r\n                <p>Discount</p>\r\n              </Col>\r\n              <Col span={14} offset={10}>\r\n                <p>Total after discount</p>\r\n              </Col>\r\n              <Col span={10} offset={8}>\r\n                <p>Vat amount(auto calculate 13% of total after discount)</p>\r\n              </Col>\r\n              <Col span={12} offset={10}>\r\n                <p>Grand Total</p>\r\n              </Col>\r\n              <Col span={12} offset={10}>\r\n                <p>Remarks</p>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tab=\"Purchase Return List\" key=\"2\">\r\n            <Table dataSource={purchaseList} columns={purchaseListTable} />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PurchasePage\r\n","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\SalesPage\\index.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\Stock\\index.jsx",["136"],"import React from 'react'\r\n\r\nfunction index() {\r\n  return (\r\n    <div>\r\n      our stock\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default index\r\n","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\SalesReturnPage\\index.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\PurchasePage\\index.jsx",["137","138","139","140"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { Typography } from 'antd'\r\nimport axios, { post } from 'axios'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport { Input, Tabs, Row, Col, Form, Table, Select } from 'antd'\r\n\r\nconst { TabPane } = Tabs\r\nconst { Title } = Typography\r\n\r\nconst PurchaseVoucherColumns = [\r\n  {\r\n    title: 'S.N',\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n  },\r\n  {\r\n    title: 'Item Name',\r\n    dataIndex: 'item_name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Goodown/rack',\r\n    dataIndex: 'rack_number',\r\n    key: 'code',\r\n  },\r\n  {\r\n    title: 'Quantity',\r\n    dataIndex: 'quantity',\r\n    key: 'local_name',\r\n  },\r\n\r\n  {\r\n    title: 'Unit',\r\n    dataIndex: 'price',\r\n    key: 'iunit',\r\n    sorter: {\r\n      compare: (a, b) => a.item_price - b.item_price,\r\n    },\r\n  },\r\n  {\r\n    title: 'Rate',\r\n    dataIndex: 'price',\r\n    key: 'limit',\r\n  },\r\n  {\r\n    title: ' Total',\r\n    dataIndex: 'total_price',\r\n    key: 'total_price',\r\n  },\r\n]\r\n\r\nconst purchaseListTable = [\r\n  {\r\n    title: 'Date',\r\n    dataIndex: 'date',\r\n    key: 'date',\r\n  },\r\n  {\r\n    title: 'Vendor Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Voucher type(Purchase)',\r\n    dataIndex: '',\r\n    key: 'x',\r\n    render: () => <p>Purchase</p>,\r\n  },\r\n\r\n  {\r\n    title: 'Voucher no',\r\n    dataIndex: 'voucher_type',\r\n    key: 'voucher_type',\r\n  },\r\n  {\r\n    title: 'Bill no ',\r\n    dataIndex: 'bill_number',\r\n    key: 'bill_number',\r\n  },\r\n  {\r\n    title: 'Total',\r\n    dataIndex: 'total_price',\r\n    key: 'total_price',\r\n  },\r\n]\r\nconst handleSubmitBill = (e) => {\r\n  let files = e.target.files\r\n  console.warn(files, 'bil')\r\n  let reader = new FileReader()\r\n  reader.readAsDataURL(files[0])\r\n  reader.onload = (e) => {\r\n    // console.warn(e.target.result,'dataimg')\r\n    const bill_data = { bill_file: e.target.result }\r\n    const url = 'http://inventoryguras.herokuapp.com/item'\r\n    return post(url, bill_data).then((response) =>\r\n      console.log(response, 'final'),\r\n    )\r\n  }\r\n}\r\n\r\nfunction PurchasePage() {\r\n  const [purchaseVoucher, setPurchaseVoucher] = useState([])\r\n  const [purchaseList, setPurchaseList] = useState([])\r\n  const [calculationRow, setcalculationRow] = useState({\r\n    total: '1000',\r\n    Discount: '20',\r\n    Total_After_Discount: '10',\r\n    Vat_amount: '',\r\n    Grand_total: '',\r\n  })\r\n\r\n  const Purchase_bill = useRef()\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setLoading(true)\r\n      axios\r\n        .get('http://inventoryguras.herokuapp.com/purchase/')\r\n        .then((repos) => {\r\n          // console.log(repos.data, 'hello')\r\n          setPurchaseVoucher(\r\n            repos.data.map((purchaseVoucherData) => {\r\n              return {\r\n                key: purchaseVoucherData.id,\r\n                id: purchaseVoucherData.id,\r\n                price: purchaseVoucherData.price,\r\n                item_name: purchaseVoucherData.item.item_name,\r\n                rack_number: purchaseVoucherData.rack_number.rack_number,\r\n                quantity: purchaseVoucherData.quantity,\r\n                total_price: purchaseVoucherData.total_price,\r\n              }\r\n            }, calculationRow),\r\n          )\r\n          setPurchaseList(\r\n            repos.data.map((list) => {\r\n              return {\r\n                key: list.vendor_detail.id,\r\n                name: list.vendor_detail.name,\r\n                bill_number: list.bill_number,\r\n                date: list.date,\r\n              }\r\n            }),\r\n          )\r\n        })\r\n    } catch (error) {\r\n      setLoading(false)\r\n      message.error(error.message)\r\n    }\r\n  }, [])\r\n  const handlePrint = useReactToPrint({\r\n    content: () => Purchase_bill.current,\r\n  })\r\n  const total = () => {\r\n    return (\r\n      <>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <p style={{ textAlign: 'center', width: '100%' }}>Total</p>\r\n          <p>10000</p>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <p style={{ textAlign: 'center', width: '100%' }}>Vat</p>\r\n          <p>13%</p>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Title level={2} style={{ color: 'gray', padding: '  5px 30px' }}>\r\n          Purchase Details\r\n        </Title>\r\n        <button\r\n          onClick={handlePrint}\r\n          style={{\r\n            background: 'green',\r\n            color: 'white',\r\n            height: '40px',\r\n            margin: '5px 15px',\r\n          }}\r\n        >\r\n          Generate Report\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{ padding: '0px 30px' }}\r\n        className=\"card-container\"\r\n        ref={Purchase_bill}\r\n      >\r\n        <Tabs type=\"card\">\r\n          <TabPane className=\"Purchase_bill\" tab=\"Purchase Voucher\" key=\"1\">\r\n            <Row>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    paddingLeft: '60px',\r\n                  }}\r\n                  label=\" Date\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter Date\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8} offset={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                  }}\r\n                  label=\"Voucher no\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter Voucher no\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                  }}\r\n                  label=\" Voucher Type\"\r\n                >\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Purchase and Purchase Return\"\r\n                    value={'Purchase '}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8} offset={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    paddingLeft: '35px',\r\n                  }}\r\n                  label=\"Bill no\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter Voucher no\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                  }}\r\n                  label=\"Vendor Name\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter Vendor name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8} offset={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    paddingLeft: '17px',\r\n                  }}\r\n                  label=\"PAN Num\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter PAN Num\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    paddingLeft: '40px',\r\n                  }}\r\n                  label=\"Contact\"\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Enter Contact\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8} offset={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                  }}\r\n                  label=\" Upload Bill \"\r\n                >\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"bill_file\"\r\n                    onChange={handleSubmitBill}\r\n                    size=\"large\"\r\n                    placeholder=\"Enter Bill\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    paddingLeft: '40px',\r\n                  }}\r\n                  label=\"Address\"\r\n                  placeholder=\"Select Adress\"\r\n                >\r\n                  <Select size=\"large\">\r\n                    <Select.Option value=\"1\">Kathmandu</Select.Option>\r\n                    <Select.Option value=\"2\">Bhaktpur</Select.Option>\r\n                    <Select.Option value=\"3\">Lalitpur</Select.Option>\r\n                    <Select.Option value=\"4\">Kritipur</Select.Option>\r\n                    <Select.Option value=\"4\">Biratnagar</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ width: '100%', background: 'white' }}>\r\n              {loading && (\r\n                <Table\r\n                  style={{ width: '100%' }}\r\n                  dataSource={purchaseVoucher}\r\n                  columns={PurchaseVoucherColumns}\r\n                  footer={total}\r\n                />\r\n              )}\r\n              <Col span={12} offset={10}>\r\n                <p>Total</p>\r\n              </Col>\r\n              <Col span={12} offset={10}>\r\n                <p>Discount</p>\r\n              </Col>\r\n              <Col span={14} offset={10}>\r\n                <p>Total after discount</p>\r\n              </Col>\r\n              <Col span={10} offset={8}>\r\n                <p>Vat amount(auto calculate 13% of total after discount)</p>\r\n              </Col>\r\n              <Col span={12} offset={10}>\r\n                <p>Grand Total</p>\r\n              </Col>\r\n              <Col span={12} offset={10}>\r\n                <p>Remarks</p>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tab=\"Purchase List\" key=\"2\">\r\n            <Table dataSource={purchaseList} columns={purchaseListTable} />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PurchasePage\r\n","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\Rack\\index.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\hoc\\PublicRoute\\index.jsx",["141","142","143","144","145","146","147"],"import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <>\r\n          <Component {...props} />\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  component: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n};\r\n\r\nexport default PublicRoute;\r\n","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\hoc\\PrivateRoute\\index.jsx",["148","149","150","151","152","153","154","155","156","157","158"],"import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { Header, Footer, SideBar } from '../../component';\r\nimport { Layout } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const isLogin = () => localStorage.getItem('ims-session') || null;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLogin() ? (\r\n          <>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n              <Sider>\r\n                <SideBar />\r\n              </Sider>\r\n              <Layout>\r\n                <Header />\r\n                <Content>\r\n                  <Component {...props} />\r\n                </Content>\r\n                <Footer />\r\n              </Layout>\r\n            </Layout>\r\n          </>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n};\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\VendorPage\\vendorForm.js",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\VendorPage\\VendorTableList.js",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\CustomerPage\\CustomerListTable.js",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\CustomerPage\\CustomerForm.js",["159"],"import React, { useState } from 'react'\r\nimport { Col, Row, Input, Form, Button } from 'antd'\r\nimport axios from 'axios'\r\n\r\nfunction CustomerForm() {\r\n  const [customerForm, setCustomerForm] = useState({\r\n    CustomerName: '',\r\n    address: '',\r\n    pan_num: '',\r\n    contact: '',\r\n    opening_balance: '',\r\n  })\r\n  function handleChange(e) {\r\n    const value = e.target.value\r\n    setCustomerForm({\r\n      ...customerForm,\r\n      [e.target.name]: value,\r\n    })\r\n  }\r\n  // console.log(customerForm, 'helohelo')\r\n\r\n  const handleSubmit = () => {\r\n    axios\r\n      .post(`http://inventoryguras.herokuapp.com/customer`, customerForm)\r\n      .catch((err) => alert(err))\r\n    console.log('submitted', customerForm)\r\n  }\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={8} offset={1}>\r\n          <Form.Item\r\n            style={{\r\n              fontSize: '30px',\r\n              fontWeight: '600',\r\n            }}\r\n            label=\" Customer name\"\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              onChange={handleChange}\r\n              name=\"CustomerName\"\r\n              placeholder=\"Enter Customer name\"\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={8} offset={1}>\r\n          <Form.Item\r\n            style={{\r\n              fontSize: '30px',\r\n              fontWeight: '600',\r\n              paddingLeft: '30px',\r\n            }}\r\n            label=\" ADDRESS \"\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              onChange={handleChange}\r\n              name=\"address\"\r\n              placeholder=\"Enter Address\"\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={8} offset={1}>\r\n          <Form.Item\r\n            style={{\r\n              fontSize: '30px',\r\n              fontWeight: '600',\r\n            }}\r\n            label=\" PAN NUM/VAT \"\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              onChange={handleChange}\r\n              name=\"pan_num\"\r\n              placeholder=\"Enter Pan number\"\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={8} offset={1}>\r\n          <Form.Item\r\n            style={{\r\n              fontSize: '30px',\r\n              fontWeight: '600',\r\n            }}\r\n            label=\" CONTACT NUM \"\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              onChange={handleChange}\r\n              name=\"contact\"\r\n              placeholder=\"Enter contact number\"\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={8} offset={1}>\r\n          <Form.Item\r\n            style={{\r\n              fontSize: '30px',\r\n              fontWeight: '600',\r\n            }}\r\n            label=\" Opening Balance \"\r\n          >\r\n            <Input\r\n              size=\"large\"\r\n              onChange={handleChange}\r\n              name=\"opening_balance\"\r\n              placeholder=\"Enter opening balance\"\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col offset={4}>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            size=\"large\"\r\n            style={{\r\n              padding: '0px 70px',\r\n              margin: '5px',\r\n              background: 'green',\r\n              color: 'white',\r\n            }}\r\n            htmlType=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomerForm\r\n","C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\component\\index.js",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\component\\Footer\\index.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\component\\Header\\index.jsx",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\component\\SideBar\\index.jsx",["160","161","162","163"],"import React, { useState } from 'react'\r\nimport { Menu, Button, Typography } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  EnterOutlined,\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  DownOutlined,\r\n  RetweetOutlined,\r\n  SolutionOutlined,\r\n  UpOutlined,\r\n  FrownOutlined,\r\n  ContactsOutlined,\r\n  IdcardOutlined,\r\n  UserOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons'\r\n\r\nconst { Title } = Typography\r\n\r\nfunction SideBar() {\r\n  const [toggle, setToggle] = useState(false)\r\n\r\n  const toggleCollapsed = () => {\r\n    setToggle(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"logo\" style={{ width: 256 }} />\r\n      <Title level={3} style={{ color: 'white', padding: '0px 30px' }}>\r\n        Inventory Manager\r\n      </Title>\r\n      <Menu\r\n        defaultOpenKeys={['sub1']}\r\n        inlineCollapsed={toggle}\r\n        theme=\"dark\"\r\n        mode=\"inline\"\r\n        defaultSelectedKeys={['13']}\r\n      >\r\n        {/* <Button\r\n          type=\"primary\"\r\n          onClick={toggleCollapsed}\r\n          style={{ marginBottom: 16 }}\r\n        >\r\n          {toggle ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        </Button> */}\r\n\r\n        <Menu.Item key=\"1\" icon={<SettingOutlined />}>\r\n          <Link to=\"/\">DashBoard</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" icon={<SettingOutlined />}>\r\n          <Link to=\"/item\">Item</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\" icon={<ContactsOutlined />}>\r\n          <Link to=\"/vendor\">Vendor</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"4\" icon={<UserOutlined />}>\r\n          <Link to=\"/customer\">Customer</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"5\" icon={<IdcardOutlined />}>\r\n          <Link to=\"/purchase\">Purchase</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"7\" icon={<FrownOutlined />}>\r\n          <Link to=\"/loss-damage\">Loss & damage</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"8\" icon={<UpOutlined />}>\r\n          <Link to=\"/sales\">Sales</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"9\" icon={<DownOutlined />}>\r\n          <Link to=\"/sales-return\">Sales Return</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"10\" icon={<EnterOutlined />}>\r\n          <Link to=\"/purchase-return\">Purchase Return</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"11\" icon={<RetweetOutlined />}>\r\n          <Link to=\"/stock\">Stock </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"12\" icon={<SolutionOutlined />}>\r\n          <Link to=\"/rack\">Rack</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { SideBar }\r\n",[],"C:\\Users\\97798\\Desktop\\inventory-management-react\\src\\container\\VendorPage\\SingleVendor.js",[],{"ruleId":"164","severity":2,"message":"165","line":1,"column":25,"nodeType":null,"endLine":1,"endColumn":36,"fix":"166"},{"ruleId":"164","severity":2,"message":"167","line":4,"column":26,"nodeType":null,"endLine":4,"endColumn":27,"fix":"168"},{"ruleId":"164","severity":2,"message":"167","line":5,"column":26,"nodeType":null,"endLine":5,"endColumn":27,"fix":"169"},{"ruleId":"164","severity":2,"message":"167","line":6,"column":26,"nodeType":null,"endLine":6,"endColumn":27,"fix":"170"},{"ruleId":"164","severity":2,"message":"167","line":7,"column":26,"nodeType":null,"endLine":7,"endColumn":27,"fix":"171"},{"ruleId":"164","severity":2,"message":"167","line":8,"column":27,"nodeType":null,"endLine":8,"endColumn":28,"fix":"172"},{"ruleId":"164","severity":2,"message":"167","line":9,"column":7,"nodeType":null,"endLine":9,"endColumn":8,"fix":"173"},{"ruleId":"164","severity":2,"message":"167","line":11,"column":2,"nodeType":null,"endLine":11,"endColumn":3,"fix":"174"},{"ruleId":"164","severity":2,"message":"167","line":13,"column":31,"nodeType":null,"endLine":13,"endColumn":32,"fix":"175"},{"ruleId":"176","severity":2,"message":"177","line":68,"column":13,"nodeType":"178","endLine":68,"endColumn":54},{"ruleId":"176","severity":2,"message":"177","line":67,"column":13,"nodeType":"178","endLine":67,"endColumn":34},{"ruleId":"179","severity":1,"message":"180","line":88,"column":3,"nodeType":"181","messageId":"182","endLine":88,"endColumn":15},{"ruleId":"179","severity":1,"message":"180","line":96,"column":7,"nodeType":"181","messageId":"182","endLine":96,"endColumn":18},{"ruleId":"183","severity":2,"message":"184","line":104,"column":26,"nodeType":"185","messageId":"186","endLine":104,"endColumn":43},{"ruleId":"179","severity":1,"message":"180","line":122,"column":11,"nodeType":"181","messageId":"182","endLine":122,"endColumn":22},{"ruleId":"164","severity":2,"message":"187","line":4,"column":10,"nodeType":null,"endLine":8,"endColumn":4,"fix":"188"},{"ruleId":"176","severity":2,"message":"177","line":67,"column":13,"nodeType":"178","endLine":67,"endColumn":34},{"ruleId":"179","severity":1,"message":"180","line":88,"column":3,"nodeType":"181","messageId":"182","endLine":88,"endColumn":15},{"ruleId":"179","severity":1,"message":"180","line":96,"column":7,"nodeType":"181","messageId":"182","endLine":96,"endColumn":18},{"ruleId":"183","severity":2,"message":"184","line":104,"column":26,"nodeType":"185","messageId":"186","endLine":104,"endColumn":43},{"ruleId":"164","severity":2,"message":"167","line":1,"column":26,"nodeType":null,"endLine":1,"endColumn":27,"fix":"189"},{"ruleId":"164","severity":2,"message":"167","line":2,"column":41,"nodeType":null,"endLine":2,"endColumn":42,"fix":"190"},{"ruleId":"164","severity":2,"message":"167","line":3,"column":35,"nodeType":null,"endLine":3,"endColumn":36,"fix":"191"},{"ruleId":"164","severity":2,"message":"167","line":15,"column":4,"nodeType":null,"endLine":15,"endColumn":5,"fix":"192"},{"ruleId":"164","severity":2,"message":"167","line":16,"column":2,"nodeType":null,"endLine":16,"endColumn":3,"fix":"193"},{"ruleId":"164","severity":2,"message":"167","line":20,"column":2,"nodeType":null,"endLine":20,"endColumn":3,"fix":"194"},{"ruleId":"164","severity":2,"message":"167","line":22,"column":27,"nodeType":null,"endLine":22,"endColumn":28,"fix":"195"},{"ruleId":"164","severity":2,"message":"167","line":1,"column":26,"nodeType":null,"endLine":1,"endColumn":27,"fix":"196"},{"ruleId":"164","severity":2,"message":"167","line":2,"column":51,"nodeType":null,"endLine":2,"endColumn":52,"fix":"197"},{"ruleId":"164","severity":2,"message":"167","line":3,"column":58,"nodeType":null,"endLine":3,"endColumn":59,"fix":"198"},{"ruleId":"164","severity":2,"message":"167","line":4,"column":30,"nodeType":null,"endLine":4,"endColumn":31,"fix":"199"},{"ruleId":"164","severity":2,"message":"167","line":5,"column":35,"nodeType":null,"endLine":5,"endColumn":36,"fix":"200"},{"ruleId":"164","severity":2,"message":"167","line":7,"column":34,"nodeType":null,"endLine":7,"endColumn":35,"fix":"201"},{"ruleId":"164","severity":2,"message":"167","line":10,"column":68,"nodeType":null,"endLine":10,"endColumn":69,"fix":"202"},{"ruleId":"164","severity":2,"message":"167","line":36,"column":4,"nodeType":null,"endLine":36,"endColumn":5,"fix":"203"},{"ruleId":"164","severity":2,"message":"167","line":37,"column":2,"nodeType":null,"endLine":37,"endColumn":3,"fix":"204"},{"ruleId":"164","severity":2,"message":"167","line":41,"column":2,"nodeType":null,"endLine":41,"endColumn":3,"fix":"205"},{"ruleId":"164","severity":2,"message":"167","line":43,"column":28,"nodeType":null,"endLine":43,"endColumn":29,"fix":"206"},{"ruleId":"179","severity":1,"message":"180","line":26,"column":5,"nodeType":"181","messageId":"182","endLine":26,"endColumn":16},{"ruleId":"183","severity":2,"message":"207","line":2,"column":16,"nodeType":"185","messageId":"186","endLine":2,"endColumn":22},{"ruleId":"183","severity":2,"message":"208","line":6,"column":3,"nodeType":"185","messageId":"186","endLine":6,"endColumn":21},{"ruleId":"183","severity":2,"message":"209","line":7,"column":3,"nodeType":"185","messageId":"186","endLine":7,"endColumn":19},{"ruleId":"183","severity":2,"message":"210","line":24,"column":9,"nodeType":"185","messageId":"186","endLine":24,"endColumn":24},"prettier/prettier","Replace `onPerfEntry` with `(onPerfEntry)`",{"range":"211","text":"212"},"Delete `;`",{"range":"213","text":"214"},{"range":"215","text":"214"},{"range":"216","text":"214"},{"range":"217","text":"214"},{"range":"218","text":"214"},{"range":"219","text":"214"},{"range":"220","text":"214"},{"range":"221","text":"214"},"react/display-name","Component definition is missing display name","ArrowFunctionExpression","no-console","Unexpected console statement.","MemberExpression","unexpected","no-unused-vars","'setcalculationRow' is assigned a value but never used.","Identifier","unusedVar","Replace `(␍⏎····<div>␍⏎······our·stock␍⏎····</div>␍⏎··)` with `<div>our·stock</div>`",{"range":"222","text":"223"},{"range":"224","text":"214"},{"range":"225","text":"214"},{"range":"226","text":"214"},{"range":"227","text":"214"},{"range":"228","text":"214"},{"range":"229","text":"214"},{"range":"230","text":"214"},{"range":"231","text":"214"},{"range":"232","text":"214"},{"range":"233","text":"214"},{"range":"234","text":"214"},{"range":"235","text":"214"},{"range":"236","text":"214"},{"range":"237","text":"214"},{"range":"238","text":"214"},{"range":"239","text":"214"},{"range":"240","text":"214"},{"range":"241","text":"214"},"'Button' is defined but never used.","'MenuUnfoldOutlined' is defined but never used.","'MenuFoldOutlined' is defined but never used.","'toggleCollapsed' is assigned a value but never used.",[24,35],"(onPerfEntry)",[206,207],"",[234,235],[262,263],[290,291],[319,320],[328,329],[337,338],[372,373],[58,104],"<div>our stock</div>",[25,26],[68,69],[105,106],[323,324],[327,328],[431,432],[462,463],[25,26],[78,79],[138,139],[170,171],[207,208],[245,246],[380,381],[942,943],[946,947],[1051,1052],[1083,1084]]